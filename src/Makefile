# Makefile.in generated by automake 1.13.4 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.







am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/all_distance_sketch
pkgincludedir = $(includedir)/all_distance_sketch
pkglibdir = $(libdir)/all_distance_sketch
pkglibexecdir = $(libexecdir)/all_distance_sketch
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = test_all$(EXEEXT) sketch_app$(EXEEXT) \
	reverse_rank_app$(EXEEXT) t_skim_reverse_rank_app$(EXEEXT) \
	dijkstra_app$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp $(dist_noinst_DATA) $(include_HEADERS)
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(includedir)"
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
liball_distance_sketch_a_AR = $(AR) $(ARFLAGS)
liball_distance_sketch_a_LIBADD =
am__objects_1 =
am__objects_2 = all_distance_sketch.pb.$(OBJEXT) ranking.pb.$(OBJEXT) \
	cover.pb.$(OBJEXT)
am_liball_distance_sketch_a_OBJECTS = $(am__objects_1) \
	$(am__objects_2)
liball_distance_sketch_a_OBJECTS =  \
	$(am_liball_distance_sketch_a_OBJECTS)
PROGRAMS = $(bin_PROGRAMS)
am__objects_3 = $(am__objects_1) $(am__objects_1) $(am__objects_2)
am_dijkstra_app_OBJECTS = dijkstra_app.$(OBJEXT) $(am__objects_3)
dijkstra_app_OBJECTS = $(am_dijkstra_app_OBJECTS)
dijkstra_app_LDADD = $(LDADD)
am_reverse_rank_app_OBJECTS = reverse_rank_app.$(OBJEXT) \
	$(am__objects_3)
reverse_rank_app_OBJECTS = $(am_reverse_rank_app_OBJECTS)
reverse_rank_app_LDADD = $(LDADD)
am_sketch_app_OBJECTS = sketch_calculation_app.$(OBJEXT) \
	$(am__objects_3)
sketch_app_OBJECTS = $(am_sketch_app_OBJECTS)
sketch_app_LDADD = $(LDADD)
am_t_skim_reverse_rank_app_OBJECTS =  \
	t_skim_reverse_rank_app.$(OBJEXT) $(am__objects_3)
t_skim_reverse_rank_app_OBJECTS =  \
	$(am_t_skim_reverse_rank_app_OBJECTS)
t_skim_reverse_rank_app_LDADD = $(LDADD)
am_test_all_OBJECTS = run_all.$(OBJEXT) $(am__objects_3)
test_all_OBJECTS = $(am_test_all_OBJECTS)
test_all_LDADD = $(LDADD)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(liball_distance_sketch_a_SOURCES) $(dijkstra_app_SOURCES) \
	$(reverse_rank_app_SOURCES) $(sketch_app_SOURCES) \
	$(t_skim_reverse_rank_app_SOURCES) $(test_all_SOURCES)
DIST_SOURCES = $(liball_distance_sketch_a_SOURCES) \
	$(dijkstra_app_SOURCES) $(reverse_rank_app_SOURCES) \
	$(sketch_app_SOURCES) $(t_skim_reverse_rank_app_SOURCES) \
	$(test_all_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(dist_noinst_DATA)
HEADERS = $(include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /work/eng/eliavb/all_distance_sketch/missing aclocal-1.13
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /work/eng/eliavb/all_distance_sketch/missing autoconf
AUTOHEADER = ${SHELL} /work/eng/eliavb/all_distance_sketch/missing autoheader
AUTOMAKE = ${SHELL} /work/eng/eliavb/all_distance_sketch/missing automake-1.13
AWK = gawk
CPPFLAGS =  -I/work/eng/eliavb/include/gtest-1.7.0/include/ -I/work/eng/eliavb/include/Snap-2.3/snap-adv/ -I/work/eng/eliavb/include/Snap-2.3/snap-core/ -I/work/eng/eliavb/include/Snap-2.3/snap-exp/ -I/work/eng/eliavb/include/Snap-2.3/glib-core/ -I/work/eng/eliavb/protobuf_install/include/
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -std=gnu++11
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"all_distance_sketch\" -DPACKAGE_TARNAME=\"all_distance_sketch\" -DPACKAGE_VERSION=\"0.1\" -DPACKAGE_STRING=\"all_distance_sketch\ 0.1\" -DPACKAGE_BUGREPORT=\"eliavbuh@gmail.com\" -DPACKAGE_URL=\"\" -DPACKAGE=\"all_distance_sketch\" -DVERSION=\"0.1\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_STDBOOL_H=1 -DHAVE_GETTIMEOFDAY=1
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
GREP = /usr/bin/grep
HAVE_CXX11 = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS =  -L/work/eng/eliavb/protobuf_install/lib
LIBOBJS = 
LIBS =  /work/eng/eliavb/include/Snap-2.3/snap-core/Snap.o /work/eng/eliavb/bin/libgtest.a -lpthread
LTLIBOBJS = 
MAKEINFO = ${SHELL} /work/eng/eliavb/all_distance_sketch/missing makeinfo
MKDIR_P = /usr/bin/mkdir -p
OBJEXT = o
PACKAGE = all_distance_sketch
PACKAGE_BUGREPORT = eliavbuh@gmail.com
PACKAGE_NAME = all_distance_sketch
PACKAGE_STRING = all_distance_sketch 0.1
PACKAGE_TARNAME = all_distance_sketch
PACKAGE_URL = 
PACKAGE_VERSION = 0.1
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /work/eng/eliavb/protobuf_install/lib/pkgconfig/
PROTOBUF_CFLAGS = -pthread -I/work/eng/eliavb/protobuf_install/include  
PROTOBUF_LIBS = -pthread -L/work/eng/eliavb/protobuf_install/lib -lprotobuf -lpthread  
PROTOBUF_VERSION = 
PROTOC =  /work/eng/eliavb/protobuf_install/bin/protoc
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 0.1
abs_builddir = /work/eng/eliavb/all_distance_sketch/src
abs_srcdir = /work/eng/eliavb/all_distance_sketch/src
abs_top_builddir = /work/eng/eliavb/all_distance_sketch
abs_top_srcdir = /work/eng/eliavb/all_distance_sketch
ac_ct_AR = ar
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /work/eng/eliavb/all_distance_sketch/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /work/eng/eliavb/install
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

# what flags you want to pass to the C compiler & linker
AM_CPPFLAGS = -std=c++0x -Wall -O3 -DNDEBUG -Wno-deprecated \
	-Wno-strict-overflow -Wno-sign-compare -Wno-write-strings \
	-fPIC -ggdb -pthread -I$(builddir)
AM_LDFLAGS = -lboost_system$(BOOST_LIB_SUFFIX) -lboost_program_options -lprotobuf
# AM_CPPFLAGS = -I./include/gtest

# this lists the binaries to produce, the (non-PHONY, binary) targets in
# the previous manual Makefile
HDRS = $(wildcard ./*/*.h) $(wildcard ./*.h)
TEST_SRC = $(wildcard ./*/ut/*.cpp)
PROTOS_TO_BUILD = $(builddir)/proto/all_distance_sketch.pb.cc $(builddir)/proto/all_distance_sketch.pb.h $(builddir)/proto/ranking.pb.h $(builddir)/proto/ranking.pb.cc $(builddir)/proto/cover.pb.h $(builddir)/proto/cover.pb.cc 
ALL = $(HDRS) $(TEST_SRC) $(PROTOS_TO_BUILD)
test_all_SOURCES = graph/ut/run_all.cpp $(ALL)
sketch_app_SOURCES = app/sketch_calculation_app.cpp $(ALL)
reverse_rank_app_SOURCES = app/reverse_rank_app.cpp $(ALL)
t_skim_reverse_rank_app_SOURCES = app/t_skim_reverse_rank_app.cpp $(ALL)
dijkstra_app_SOURCES = app/dijkstra_app.cpp $(ALL)
lib_LIBRARIES = liball_distance_sketch.a
liball_distance_sketch_a_SOURCES = $(HDRS) $(PROTOS_TO_BUILD)
include_HEADERS = ./all_distance_sketch.h
BUILT_SOURCES = $(PROTOS_TO_BUILD)
dist_noinst_DATA = $(wildcard ./proto/*)
MOSTLYCLEANFILES = $(PROTOS_TO_BUILD)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cc .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

liball_distance_sketch.a: $(liball_distance_sketch_a_OBJECTS) $(liball_distance_sketch_a_DEPENDENCIES) $(EXTRA_liball_distance_sketch_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f liball_distance_sketch.a
	$(AM_V_AR)$(liball_distance_sketch_a_AR) liball_distance_sketch.a $(liball_distance_sketch_a_OBJECTS) $(liball_distance_sketch_a_LIBADD)
	$(AM_V_at)$(RANLIB) liball_distance_sketch.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

dijkstra_app$(EXEEXT): $(dijkstra_app_OBJECTS) $(dijkstra_app_DEPENDENCIES) $(EXTRA_dijkstra_app_DEPENDENCIES) 
	@rm -f dijkstra_app$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dijkstra_app_OBJECTS) $(dijkstra_app_LDADD) $(LIBS)

reverse_rank_app$(EXEEXT): $(reverse_rank_app_OBJECTS) $(reverse_rank_app_DEPENDENCIES) $(EXTRA_reverse_rank_app_DEPENDENCIES) 
	@rm -f reverse_rank_app$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(reverse_rank_app_OBJECTS) $(reverse_rank_app_LDADD) $(LIBS)

sketch_app$(EXEEXT): $(sketch_app_OBJECTS) $(sketch_app_DEPENDENCIES) $(EXTRA_sketch_app_DEPENDENCIES) 
	@rm -f sketch_app$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sketch_app_OBJECTS) $(sketch_app_LDADD) $(LIBS)

t_skim_reverse_rank_app$(EXEEXT): $(t_skim_reverse_rank_app_OBJECTS) $(t_skim_reverse_rank_app_DEPENDENCIES) $(EXTRA_t_skim_reverse_rank_app_DEPENDENCIES) 
	@rm -f t_skim_reverse_rank_app$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(t_skim_reverse_rank_app_OBJECTS) $(t_skim_reverse_rank_app_LDADD) $(LIBS)

test_all$(EXEEXT): $(test_all_OBJECTS) $(test_all_DEPENDENCIES) $(EXTRA_test_all_DEPENDENCIES) 
	@rm -f test_all$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_all_OBJECTS) $(test_all_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/all_distance_sketch.pb.Po
include ./$(DEPDIR)/cover.pb.Po
include ./$(DEPDIR)/dijkstra_app.Po
include ./$(DEPDIR)/ranking.pb.Po
include ./$(DEPDIR)/reverse_rank_app.Po
include ./$(DEPDIR)/run_all.Po
include ./$(DEPDIR)/sketch_calculation_app.Po
include ./$(DEPDIR)/t_skim_reverse_rank_app.Po

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

all_distance_sketch.pb.o: $(builddir)/proto/all_distance_sketch.pb.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all_distance_sketch.pb.o -MD -MP -MF $(DEPDIR)/all_distance_sketch.pb.Tpo -c -o all_distance_sketch.pb.o `test -f '$(builddir)/proto/all_distance_sketch.pb.cc' || echo '$(srcdir)/'`$(builddir)/proto/all_distance_sketch.pb.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/all_distance_sketch.pb.Tpo $(DEPDIR)/all_distance_sketch.pb.Po
#	$(AM_V_CXX)source='$(builddir)/proto/all_distance_sketch.pb.cc' object='all_distance_sketch.pb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all_distance_sketch.pb.o `test -f '$(builddir)/proto/all_distance_sketch.pb.cc' || echo '$(srcdir)/'`$(builddir)/proto/all_distance_sketch.pb.cc

all_distance_sketch.pb.obj: $(builddir)/proto/all_distance_sketch.pb.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all_distance_sketch.pb.obj -MD -MP -MF $(DEPDIR)/all_distance_sketch.pb.Tpo -c -o all_distance_sketch.pb.obj `if test -f '$(builddir)/proto/all_distance_sketch.pb.cc'; then $(CYGPATH_W) '$(builddir)/proto/all_distance_sketch.pb.cc'; else $(CYGPATH_W) '$(srcdir)/$(builddir)/proto/all_distance_sketch.pb.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/all_distance_sketch.pb.Tpo $(DEPDIR)/all_distance_sketch.pb.Po
#	$(AM_V_CXX)source='$(builddir)/proto/all_distance_sketch.pb.cc' object='all_distance_sketch.pb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all_distance_sketch.pb.obj `if test -f '$(builddir)/proto/all_distance_sketch.pb.cc'; then $(CYGPATH_W) '$(builddir)/proto/all_distance_sketch.pb.cc'; else $(CYGPATH_W) '$(srcdir)/$(builddir)/proto/all_distance_sketch.pb.cc'; fi`

ranking.pb.o: $(builddir)/proto/ranking.pb.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ranking.pb.o -MD -MP -MF $(DEPDIR)/ranking.pb.Tpo -c -o ranking.pb.o `test -f '$(builddir)/proto/ranking.pb.cc' || echo '$(srcdir)/'`$(builddir)/proto/ranking.pb.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/ranking.pb.Tpo $(DEPDIR)/ranking.pb.Po
#	$(AM_V_CXX)source='$(builddir)/proto/ranking.pb.cc' object='ranking.pb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ranking.pb.o `test -f '$(builddir)/proto/ranking.pb.cc' || echo '$(srcdir)/'`$(builddir)/proto/ranking.pb.cc

ranking.pb.obj: $(builddir)/proto/ranking.pb.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ranking.pb.obj -MD -MP -MF $(DEPDIR)/ranking.pb.Tpo -c -o ranking.pb.obj `if test -f '$(builddir)/proto/ranking.pb.cc'; then $(CYGPATH_W) '$(builddir)/proto/ranking.pb.cc'; else $(CYGPATH_W) '$(srcdir)/$(builddir)/proto/ranking.pb.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ranking.pb.Tpo $(DEPDIR)/ranking.pb.Po
#	$(AM_V_CXX)source='$(builddir)/proto/ranking.pb.cc' object='ranking.pb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ranking.pb.obj `if test -f '$(builddir)/proto/ranking.pb.cc'; then $(CYGPATH_W) '$(builddir)/proto/ranking.pb.cc'; else $(CYGPATH_W) '$(srcdir)/$(builddir)/proto/ranking.pb.cc'; fi`

cover.pb.o: $(builddir)/proto/cover.pb.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cover.pb.o -MD -MP -MF $(DEPDIR)/cover.pb.Tpo -c -o cover.pb.o `test -f '$(builddir)/proto/cover.pb.cc' || echo '$(srcdir)/'`$(builddir)/proto/cover.pb.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/cover.pb.Tpo $(DEPDIR)/cover.pb.Po
#	$(AM_V_CXX)source='$(builddir)/proto/cover.pb.cc' object='cover.pb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cover.pb.o `test -f '$(builddir)/proto/cover.pb.cc' || echo '$(srcdir)/'`$(builddir)/proto/cover.pb.cc

cover.pb.obj: $(builddir)/proto/cover.pb.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cover.pb.obj -MD -MP -MF $(DEPDIR)/cover.pb.Tpo -c -o cover.pb.obj `if test -f '$(builddir)/proto/cover.pb.cc'; then $(CYGPATH_W) '$(builddir)/proto/cover.pb.cc'; else $(CYGPATH_W) '$(srcdir)/$(builddir)/proto/cover.pb.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cover.pb.Tpo $(DEPDIR)/cover.pb.Po
#	$(AM_V_CXX)source='$(builddir)/proto/cover.pb.cc' object='cover.pb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cover.pb.obj `if test -f '$(builddir)/proto/cover.pb.cc'; then $(CYGPATH_W) '$(builddir)/proto/cover.pb.cc'; else $(CYGPATH_W) '$(srcdir)/$(builddir)/proto/cover.pb.cc'; fi`

dijkstra_app.o: app/dijkstra_app.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dijkstra_app.o -MD -MP -MF $(DEPDIR)/dijkstra_app.Tpo -c -o dijkstra_app.o `test -f 'app/dijkstra_app.cpp' || echo '$(srcdir)/'`app/dijkstra_app.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dijkstra_app.Tpo $(DEPDIR)/dijkstra_app.Po
#	$(AM_V_CXX)source='app/dijkstra_app.cpp' object='dijkstra_app.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dijkstra_app.o `test -f 'app/dijkstra_app.cpp' || echo '$(srcdir)/'`app/dijkstra_app.cpp

dijkstra_app.obj: app/dijkstra_app.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dijkstra_app.obj -MD -MP -MF $(DEPDIR)/dijkstra_app.Tpo -c -o dijkstra_app.obj `if test -f 'app/dijkstra_app.cpp'; then $(CYGPATH_W) 'app/dijkstra_app.cpp'; else $(CYGPATH_W) '$(srcdir)/app/dijkstra_app.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dijkstra_app.Tpo $(DEPDIR)/dijkstra_app.Po
#	$(AM_V_CXX)source='app/dijkstra_app.cpp' object='dijkstra_app.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dijkstra_app.obj `if test -f 'app/dijkstra_app.cpp'; then $(CYGPATH_W) 'app/dijkstra_app.cpp'; else $(CYGPATH_W) '$(srcdir)/app/dijkstra_app.cpp'; fi`

reverse_rank_app.o: app/reverse_rank_app.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT reverse_rank_app.o -MD -MP -MF $(DEPDIR)/reverse_rank_app.Tpo -c -o reverse_rank_app.o `test -f 'app/reverse_rank_app.cpp' || echo '$(srcdir)/'`app/reverse_rank_app.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/reverse_rank_app.Tpo $(DEPDIR)/reverse_rank_app.Po
#	$(AM_V_CXX)source='app/reverse_rank_app.cpp' object='reverse_rank_app.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o reverse_rank_app.o `test -f 'app/reverse_rank_app.cpp' || echo '$(srcdir)/'`app/reverse_rank_app.cpp

reverse_rank_app.obj: app/reverse_rank_app.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT reverse_rank_app.obj -MD -MP -MF $(DEPDIR)/reverse_rank_app.Tpo -c -o reverse_rank_app.obj `if test -f 'app/reverse_rank_app.cpp'; then $(CYGPATH_W) 'app/reverse_rank_app.cpp'; else $(CYGPATH_W) '$(srcdir)/app/reverse_rank_app.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/reverse_rank_app.Tpo $(DEPDIR)/reverse_rank_app.Po
#	$(AM_V_CXX)source='app/reverse_rank_app.cpp' object='reverse_rank_app.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o reverse_rank_app.obj `if test -f 'app/reverse_rank_app.cpp'; then $(CYGPATH_W) 'app/reverse_rank_app.cpp'; else $(CYGPATH_W) '$(srcdir)/app/reverse_rank_app.cpp'; fi`

sketch_calculation_app.o: app/sketch_calculation_app.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sketch_calculation_app.o -MD -MP -MF $(DEPDIR)/sketch_calculation_app.Tpo -c -o sketch_calculation_app.o `test -f 'app/sketch_calculation_app.cpp' || echo '$(srcdir)/'`app/sketch_calculation_app.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sketch_calculation_app.Tpo $(DEPDIR)/sketch_calculation_app.Po
#	$(AM_V_CXX)source='app/sketch_calculation_app.cpp' object='sketch_calculation_app.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sketch_calculation_app.o `test -f 'app/sketch_calculation_app.cpp' || echo '$(srcdir)/'`app/sketch_calculation_app.cpp

sketch_calculation_app.obj: app/sketch_calculation_app.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sketch_calculation_app.obj -MD -MP -MF $(DEPDIR)/sketch_calculation_app.Tpo -c -o sketch_calculation_app.obj `if test -f 'app/sketch_calculation_app.cpp'; then $(CYGPATH_W) 'app/sketch_calculation_app.cpp'; else $(CYGPATH_W) '$(srcdir)/app/sketch_calculation_app.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sketch_calculation_app.Tpo $(DEPDIR)/sketch_calculation_app.Po
#	$(AM_V_CXX)source='app/sketch_calculation_app.cpp' object='sketch_calculation_app.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sketch_calculation_app.obj `if test -f 'app/sketch_calculation_app.cpp'; then $(CYGPATH_W) 'app/sketch_calculation_app.cpp'; else $(CYGPATH_W) '$(srcdir)/app/sketch_calculation_app.cpp'; fi`

t_skim_reverse_rank_app.o: app/t_skim_reverse_rank_app.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT t_skim_reverse_rank_app.o -MD -MP -MF $(DEPDIR)/t_skim_reverse_rank_app.Tpo -c -o t_skim_reverse_rank_app.o `test -f 'app/t_skim_reverse_rank_app.cpp' || echo '$(srcdir)/'`app/t_skim_reverse_rank_app.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/t_skim_reverse_rank_app.Tpo $(DEPDIR)/t_skim_reverse_rank_app.Po
#	$(AM_V_CXX)source='app/t_skim_reverse_rank_app.cpp' object='t_skim_reverse_rank_app.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o t_skim_reverse_rank_app.o `test -f 'app/t_skim_reverse_rank_app.cpp' || echo '$(srcdir)/'`app/t_skim_reverse_rank_app.cpp

t_skim_reverse_rank_app.obj: app/t_skim_reverse_rank_app.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT t_skim_reverse_rank_app.obj -MD -MP -MF $(DEPDIR)/t_skim_reverse_rank_app.Tpo -c -o t_skim_reverse_rank_app.obj `if test -f 'app/t_skim_reverse_rank_app.cpp'; then $(CYGPATH_W) 'app/t_skim_reverse_rank_app.cpp'; else $(CYGPATH_W) '$(srcdir)/app/t_skim_reverse_rank_app.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/t_skim_reverse_rank_app.Tpo $(DEPDIR)/t_skim_reverse_rank_app.Po
#	$(AM_V_CXX)source='app/t_skim_reverse_rank_app.cpp' object='t_skim_reverse_rank_app.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o t_skim_reverse_rank_app.obj `if test -f 'app/t_skim_reverse_rank_app.cpp'; then $(CYGPATH_W) 'app/t_skim_reverse_rank_app.cpp'; else $(CYGPATH_W) '$(srcdir)/app/t_skim_reverse_rank_app.cpp'; fi`

run_all.o: graph/ut/run_all.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT run_all.o -MD -MP -MF $(DEPDIR)/run_all.Tpo -c -o run_all.o `test -f 'graph/ut/run_all.cpp' || echo '$(srcdir)/'`graph/ut/run_all.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/run_all.Tpo $(DEPDIR)/run_all.Po
#	$(AM_V_CXX)source='graph/ut/run_all.cpp' object='run_all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o run_all.o `test -f 'graph/ut/run_all.cpp' || echo '$(srcdir)/'`graph/ut/run_all.cpp

run_all.obj: graph/ut/run_all.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT run_all.obj -MD -MP -MF $(DEPDIR)/run_all.Tpo -c -o run_all.obj `if test -f 'graph/ut/run_all.cpp'; then $(CYGPATH_W) 'graph/ut/run_all.cpp'; else $(CYGPATH_W) '$(srcdir)/graph/ut/run_all.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/run_all.Tpo $(DEPDIR)/run_all.Po
#	$(AM_V_CXX)source='graph/ut/run_all.cpp' object='run_all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o run_all.obj `if test -f 'graph/ut/run_all.cpp'; then $(CYGPATH_W) 'graph/ut/run_all.cpp'; else $(CYGPATH_W) '$(srcdir)/graph/ut/run_all.cpp'; fi`

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLIBRARIES

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLIBRARIES


# Build proto files first
$(builddir)/proto/all_distance_sketch.pb.cc $(builddir)/proto/all_distance_sketch.pb.h: $(srcdir)/proto/all_distance_sketch.proto
	@$(PROTOC) --cpp_out=$(builddir) $(srcdir)/proto/all_distance_sketch.proto
$(builddir)/proto/ranking.pb.h $(builddir)/proto/ranking.pb.cc: $(srcdir)/proto/ranking.proto
	@$(PROTOC) --cpp_out=$(builddir) $(srcdir)/proto/ranking.proto
$(builddir)/proto/cover.pb.cc $(builddir)/proto/cover.pb.h: $(srcdir)/proto/cover.proto
	@$(PROTOC) --cpp_out=$(builddir) $(srcdir)/proto/cover.proto

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
