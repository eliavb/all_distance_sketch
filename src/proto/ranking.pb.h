// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/ranking.proto

#ifndef PROTOBUF_proto_2franking_2eproto__INCLUDED
#define PROTOBUF_proto_2franking_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace all_distance_sketch {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_2franking_2eproto();
void protobuf_AssignDesc_proto_2franking_2eproto();
void protobuf_ShutdownFile_proto_2franking_2eproto();

class NodeRankGpb;
class NodeRanksGpb;

// ===================================================================

class NodeRankGpb : public ::google::protobuf::Message {
 public:
  NodeRankGpb();
  virtual ~NodeRankGpb();

  NodeRankGpb(const NodeRankGpb& from);

  inline NodeRankGpb& operator=(const NodeRankGpb& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeRankGpb& default_instance();

  void Swap(NodeRankGpb* other);

  // implements Message ----------------------------------------------

  NodeRankGpb* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NodeRankGpb& from);
  void MergeFrom(const NodeRankGpb& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 node_id = 1;
  inline bool has_node_id() const;
  inline void clear_node_id();
  static const int kNodeIdFieldNumber = 1;
  inline ::google::protobuf::uint64 node_id() const;
  inline void set_node_id(::google::protobuf::uint64 value);

  // optional uint64 node_rank = 2;
  inline bool has_node_rank() const;
  inline void clear_node_rank();
  static const int kNodeRankFieldNumber = 2;
  inline ::google::protobuf::uint64 node_rank() const;
  inline void set_node_rank(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:all_distance_sketch.proto.NodeRankGpb)
 private:
  inline void set_has_node_id();
  inline void clear_has_node_id();
  inline void set_has_node_rank();
  inline void clear_has_node_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 node_id_;
  ::google::protobuf::uint64 node_rank_;
  friend void  protobuf_AddDesc_proto_2franking_2eproto();
  friend void protobuf_AssignDesc_proto_2franking_2eproto();
  friend void protobuf_ShutdownFile_proto_2franking_2eproto();

  void InitAsDefaultInstance();
  static NodeRankGpb* default_instance_;
};
// -------------------------------------------------------------------

class NodeRanksGpb : public ::google::protobuf::Message {
 public:
  NodeRanksGpb();
  virtual ~NodeRanksGpb();

  NodeRanksGpb(const NodeRanksGpb& from);

  inline NodeRanksGpb& operator=(const NodeRanksGpb& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeRanksGpb& default_instance();

  void Swap(NodeRanksGpb* other);

  // implements Message ----------------------------------------------

  NodeRanksGpb* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NodeRanksGpb& from);
  void MergeFrom(const NodeRanksGpb& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 source_node_id = 1;
  inline bool has_source_node_id() const;
  inline void clear_source_node_id();
  static const int kSourceNodeIdFieldNumber = 1;
  inline ::google::protobuf::uint64 source_node_id() const;
  inline void set_source_node_id(::google::protobuf::uint64 value);

  // optional uint64 max_node_id = 2;
  inline bool has_max_node_id() const;
  inline void clear_max_node_id();
  static const int kMaxNodeIdFieldNumber = 2;
  inline ::google::protobuf::uint64 max_node_id() const;
  inline void set_max_node_id(::google::protobuf::uint64 value);

  // repeated .all_distance_sketch.proto.NodeRankGpb node_ranks = 3;
  inline int node_ranks_size() const;
  inline void clear_node_ranks();
  static const int kNodeRanksFieldNumber = 3;
  inline const ::all_distance_sketch::proto::NodeRankGpb& node_ranks(int index) const;
  inline ::all_distance_sketch::proto::NodeRankGpb* mutable_node_ranks(int index);
  inline ::all_distance_sketch::proto::NodeRankGpb* add_node_ranks();
  inline const ::google::protobuf::RepeatedPtrField< ::all_distance_sketch::proto::NodeRankGpb >&
      node_ranks() const;
  inline ::google::protobuf::RepeatedPtrField< ::all_distance_sketch::proto::NodeRankGpb >*
      mutable_node_ranks();

  // @@protoc_insertion_point(class_scope:all_distance_sketch.proto.NodeRanksGpb)
 private:
  inline void set_has_source_node_id();
  inline void clear_has_source_node_id();
  inline void set_has_max_node_id();
  inline void clear_has_max_node_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 source_node_id_;
  ::google::protobuf::uint64 max_node_id_;
  ::google::protobuf::RepeatedPtrField< ::all_distance_sketch::proto::NodeRankGpb > node_ranks_;
  friend void  protobuf_AddDesc_proto_2franking_2eproto();
  friend void protobuf_AssignDesc_proto_2franking_2eproto();
  friend void protobuf_ShutdownFile_proto_2franking_2eproto();

  void InitAsDefaultInstance();
  static NodeRanksGpb* default_instance_;
};
// ===================================================================


// ===================================================================

// NodeRankGpb

// optional uint64 node_id = 1;
inline bool NodeRankGpb::has_node_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NodeRankGpb::set_has_node_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NodeRankGpb::clear_has_node_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NodeRankGpb::clear_node_id() {
  node_id_ = GOOGLE_ULONGLONG(0);
  clear_has_node_id();
}
inline ::google::protobuf::uint64 NodeRankGpb::node_id() const {
  // @@protoc_insertion_point(field_get:all_distance_sketch.proto.NodeRankGpb.node_id)
  return node_id_;
}
inline void NodeRankGpb::set_node_id(::google::protobuf::uint64 value) {
  set_has_node_id();
  node_id_ = value;
  // @@protoc_insertion_point(field_set:all_distance_sketch.proto.NodeRankGpb.node_id)
}

// optional uint64 node_rank = 2;
inline bool NodeRankGpb::has_node_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NodeRankGpb::set_has_node_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NodeRankGpb::clear_has_node_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NodeRankGpb::clear_node_rank() {
  node_rank_ = GOOGLE_ULONGLONG(0);
  clear_has_node_rank();
}
inline ::google::protobuf::uint64 NodeRankGpb::node_rank() const {
  // @@protoc_insertion_point(field_get:all_distance_sketch.proto.NodeRankGpb.node_rank)
  return node_rank_;
}
inline void NodeRankGpb::set_node_rank(::google::protobuf::uint64 value) {
  set_has_node_rank();
  node_rank_ = value;
  // @@protoc_insertion_point(field_set:all_distance_sketch.proto.NodeRankGpb.node_rank)
}

// -------------------------------------------------------------------

// NodeRanksGpb

// optional uint64 source_node_id = 1;
inline bool NodeRanksGpb::has_source_node_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NodeRanksGpb::set_has_source_node_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NodeRanksGpb::clear_has_source_node_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NodeRanksGpb::clear_source_node_id() {
  source_node_id_ = GOOGLE_ULONGLONG(0);
  clear_has_source_node_id();
}
inline ::google::protobuf::uint64 NodeRanksGpb::source_node_id() const {
  // @@protoc_insertion_point(field_get:all_distance_sketch.proto.NodeRanksGpb.source_node_id)
  return source_node_id_;
}
inline void NodeRanksGpb::set_source_node_id(::google::protobuf::uint64 value) {
  set_has_source_node_id();
  source_node_id_ = value;
  // @@protoc_insertion_point(field_set:all_distance_sketch.proto.NodeRanksGpb.source_node_id)
}

// optional uint64 max_node_id = 2;
inline bool NodeRanksGpb::has_max_node_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NodeRanksGpb::set_has_max_node_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NodeRanksGpb::clear_has_max_node_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NodeRanksGpb::clear_max_node_id() {
  max_node_id_ = GOOGLE_ULONGLONG(0);
  clear_has_max_node_id();
}
inline ::google::protobuf::uint64 NodeRanksGpb::max_node_id() const {
  // @@protoc_insertion_point(field_get:all_distance_sketch.proto.NodeRanksGpb.max_node_id)
  return max_node_id_;
}
inline void NodeRanksGpb::set_max_node_id(::google::protobuf::uint64 value) {
  set_has_max_node_id();
  max_node_id_ = value;
  // @@protoc_insertion_point(field_set:all_distance_sketch.proto.NodeRanksGpb.max_node_id)
}

// repeated .all_distance_sketch.proto.NodeRankGpb node_ranks = 3;
inline int NodeRanksGpb::node_ranks_size() const {
  return node_ranks_.size();
}
inline void NodeRanksGpb::clear_node_ranks() {
  node_ranks_.Clear();
}
inline const ::all_distance_sketch::proto::NodeRankGpb& NodeRanksGpb::node_ranks(int index) const {
  // @@protoc_insertion_point(field_get:all_distance_sketch.proto.NodeRanksGpb.node_ranks)
  return node_ranks_.Get(index);
}
inline ::all_distance_sketch::proto::NodeRankGpb* NodeRanksGpb::mutable_node_ranks(int index) {
  // @@protoc_insertion_point(field_mutable:all_distance_sketch.proto.NodeRanksGpb.node_ranks)
  return node_ranks_.Mutable(index);
}
inline ::all_distance_sketch::proto::NodeRankGpb* NodeRanksGpb::add_node_ranks() {
  // @@protoc_insertion_point(field_add:all_distance_sketch.proto.NodeRanksGpb.node_ranks)
  return node_ranks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::all_distance_sketch::proto::NodeRankGpb >&
NodeRanksGpb::node_ranks() const {
  // @@protoc_insertion_point(field_list:all_distance_sketch.proto.NodeRanksGpb.node_ranks)
  return node_ranks_;
}
inline ::google::protobuf::RepeatedPtrField< ::all_distance_sketch::proto::NodeRankGpb >*
NodeRanksGpb::mutable_node_ranks() {
  // @@protoc_insertion_point(field_mutable_list:all_distance_sketch.proto.NodeRanksGpb.node_ranks)
  return &node_ranks_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace all_distance_sketch

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2franking_2eproto__INCLUDED
